#Sean Cork & Ian Squiers
#this a relatively simple python client that support XMLRPC servers.
#it works by interacting witha Front End server that appropriatly handles the
#requests generated by the client


#Import xmprpc
import xmlrpclib, sys, time, random
from random import randint

commands = ["buy", "search"]
books = ["101","102","103","201","202","203","204","301","302","303"]
numtests=500
topics = ["sci-fi", "Elvish Erotics Novels", "Self Help For Robots"]
buyresults = []
searchresults = []
#THis function runs the client interatction. This fucntion connects this
#program to the Fron End server that then ahmdles all the requests generated by the client
#progam. 
def main():

	#Ask for the front end server
	if len(sys.argv) != 2:
	    print("Usage: [server]")
	    sys.exit()


	#sets hostname as server name
	hostname = sys.argv[1]
	x = 1

	name = "http://" + hostname + ":8124"
	server = xmlrpclib.Server(name)
	#have to give parameters to get welcome to work.
	welcome_reply = server.Front.welcome(x)
	#print a welcome for the client
	print(str(welcome_reply))

	count = 0
	#loop that takes request from the client.
	while(count < 500):
		#client messages.
		t = time.time()
		reply = server.Front.HandleRequest(commands[0], books[randint(0, 9)])
		elapsed_time = time.time() - t
		buyresults.append(elapsed_time)

		t = time.time()
		reply = server.Front.HandleRequest(commands[1], topics[randint(0, 3)])
		elapsed_time = time.time() - t
		searchresults.append(elapsed_time)
		count ++;
	
	print("BUY FUNCTION RESULTS FOR 500 TESTS: ")
	print(sum(buyresult) / length(buyresult))
	print("SEARCH FUNCTION RESULTS FOR 500 TESTS: ")
	print(sum(searchresult) / length(searchresult))




	
main()